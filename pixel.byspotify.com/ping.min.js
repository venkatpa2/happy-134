! function(r) {
    var n = {};

    function o(t) {
        var e;
        return (n[t] || (e = n[t] = {
            i: t,
            l: !1,
            exports: {}
        }, r[t].call(e.exports, e, e.exports, o), e.l = !0, e)).exports
    }
    o.m = r, o.c = n, o.d = function(t, e, r) {
        o.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: r
        })
    }, o.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }, o.t = function(e, t) {
        if (1 & t && (e = o(e)), 8 & t) return e;
        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
        var r = Object.create(null);
        if (o.r(r), Object.defineProperty(r, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var n in e) o.d(r, n, function(t) {
                return e[t]
            }.bind(null, n));
        return r
    }, o.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        } : function() {
            return t
        };
        return o.d(e, "a", e), e
    }, o.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }, o.p = "", o(o.s = 7)
}([function(t, e, r) {
    "use strict";
    r = function(n) {
        var t = o,
            e = n;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);

        function o(t, e, r) {
            if (!(this instanceof o)) throw new TypeError("Cannot call a class as a function");
            n.call(this, t), this.listener = e, this.context = r
        }
        return t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e), o
    }(r(4));
    t.exports = r
}, function(t, e, r) {
    "use strict";
    t.exports = function(t, e, r, n, o, i, u, c) {
        var f, a, s;
        if (!t) throw void 0 === e ? s = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.") : (f = [r, n, o, i, u, c], a = 0, (s = new Error(e.replace(/%s/g, function() {
            return f[a++]
        }))).name = "Invariant Violation"), s.framesToPop = 1, s
    }
}, function(t, e, r) {
    r = {
        EventEmitter: r(3),
        EmitterSubscription: r(0)
    };
    t.exports = r
}, function(t, e, r) {
    "use strict";
    var n = r(0),
        o = r(5),
        i = r(6),
        u = r(1);

    function c() {
        if (!(this instanceof c)) throw new TypeError("Cannot call a class as a function");
        this._subscriber = new o, this._currentSubscription = null
    }
    c.prototype.addListener = function(t, e, r) {
        return this._subscriber.addSubscription(t, new n(this._subscriber, e, r))
    }, c.prototype.once = function(t, e, r) {
        var n = this;
        return this.addListener(t, function() {
            n.removeCurrentListener(), e.apply(r, arguments)
        })
    }, c.prototype.removeAllListeners = function(t) {
        this._subscriber.removeAllSubscriptions(t)
    }, c.prototype.removeCurrentListener = function() {
        this._currentSubscription || u(!1), this._subscriber.removeSubscription(this._currentSubscription)
    }, c.prototype.listeners = function(t) {
        t = this._subscriber.getSubscriptionsForType(t);
        return t ? t.filter(i.thatReturnsTrue).map(function(t) {
            return t.listener
        }) : []
    }, c.prototype.emit = function(t) {
        var e = this._subscriber.getSubscriptionsForType(t);
        if (e) {
            for (var r = Object.keys(e), n = 0; n < r.length; n++) {
                var o = e[r[n]];
                o && (this._currentSubscription = o, this.__emitToSubscription.apply(this, [o].concat(Array.prototype.slice.call(arguments))))
            }
            this._currentSubscription = null
        }
    }, c.prototype.__emitToSubscription = function(t, e) {
        var r = Array.prototype.slice.call(arguments, 2);
        t.listener.apply(t.context, r)
    }, t.exports = c
}, function(t, e, r) {
    "use strict";

    function n(t) {
        if (!(this instanceof n)) throw new TypeError("Cannot call a class as a function");
        this.subscriber = t
    }
    n.prototype.remove = function() {
        this.subscriber && (this.subscriber.removeSubscription(this), this.subscriber = null)
    }, t.exports = n
}, function(t, e, r) {
    "use strict";
    var n = r(1);

    function o() {
        if (!(this instanceof o)) throw new TypeError("Cannot call a class as a function");
        this._subscriptionsForType = {}, this._currentSubscription = null
    }
    o.prototype.addSubscription = function(t, e) {
        e.subscriber !== this && n(!1), this._subscriptionsForType[t] || (this._subscriptionsForType[t] = []);
        var r = this._subscriptionsForType[t].length;
        return this._subscriptionsForType[t].push(e), e.eventType = t, e.key = r, e
    }, o.prototype.removeAllSubscriptions = function(t) {
        void 0 === t ? this._subscriptionsForType = {} : delete this._subscriptionsForType[t]
    }, o.prototype.removeSubscription = function(t) {
        var e = t.eventType,
            t = t.key,
            e = this._subscriptionsForType[e];
        e && delete e[t]
    }, o.prototype.getSubscriptionsForType = function(t) {
        return this._subscriptionsForType[t]
    }, t.exports = o
}, function(t, e, r) {
    "use strict";

    function n(t) {
        return function() {
            return t
        }
    }

    function o() {}
    o.thatReturns = n, o.thatReturnsFalse = n(!1), o.thatReturnsTrue = n(!0), o.thatReturnsNull = n(null), o.thatReturnsThis = function() {
        return this
    }, o.thatReturnsArgument = function(t) {
        return t
    }, t.exports = o
}, function(B, F, t) {
    "use strict";
    t.r(F);
    var i, F = t(2),
        D = new Uint8Array(16);
    var q = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    for (var M = function(t) {
            return "string" == typeof t && q.test(t)
        }, r = [], e = 0; e < 256; ++e) r.push((e + 256).toString(16).substr(1));
    var U = function(t) {
        var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0,
            t = (r[t[e + 0]] + r[t[e + 1]] + r[t[e + 2]] + r[t[e + 3]] + "-" + r[t[e + 4]] + r[t[e + 5]] + "-" + r[t[e + 6]] + r[t[e + 7]] + "-" + r[t[e + 8]] + r[t[e + 9]] + "-" + r[t[e + 10]] + r[t[e + 11]] + r[t[e + 12]] + r[t[e + 13]] + r[t[e + 14]] + r[t[e + 15]]).toLowerCase();
        if (M(t)) return t;
        throw TypeError("Stringified UUID is invalid")
    };
    var V = function(t, e, r) {
        var n = (t = t || {}).random || (t.rng || function() {
            if (i = i || "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto)) return i(D);
            throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported")
        })();
        if (n[6] = 15 & n[6] | 64, n[8] = 63 & n[8] | 128, e) {
            r = r || 0;
            for (var o = 0; o < 16; ++o) e[r + o] = n[o];
            return e
        }
        return U(n)
    };

    function H(t) {
        return parseFloat(t.toString().replace(/(\d{3})$/, ".$1"))
    }

    function c() {
        return H((new Date).getTime())
    }

    function n() {
        return V().replace(/-/g, "")
    }
    var s = {},
        l = !1,
        t = function() {
            s = {
                key: null,
                lifetime: 365,
                group: null,
                label: null,
                experiment: null
            }
        };

    function f(t) {
        return Object.prototype.hasOwnProperty.call(s, t) ? s[t] : null
    }
    t();

    function o(t) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function $(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== o(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== o(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === o(t) ? t : String(t)
            }(n.key), n)
        }
    }
    var u = function() {
            return function(t) {
                return "string" == typeof t ? t : "number" == typeof t ? t.toString() : null
            }
        },
        a = function() {
            return function(t) {
                t = parseInt(t, 10);
                return isNaN(t) ? null : t
            }
        },
        p = function() {
            return function(t) {
                t = parseFloat(t, 10);
                return isNaN(t) ? null : t
            }
        },
        z = function() {
            return function(t) {
                return -1 < ["True", "true", "1", 1, !0].indexOf(t) || !(-1 < ["False", "false", "0", 0, !1].indexOf(t)) && null
            }
        },
        J = function(n) {
            return function(t) {
                var e;
                if (Array.isArray(t)) e = t;
                else {
                    if (null == t) return null;
                    e = [t]
                }
                return n ? e.map(function(r) {
                    return Object.keys(n).reduce(function(t, e) {
                        return t[e] = n[e](r[e]), t
                    }, {})
                }) : e
            }
        },
        W = function(n) {
            return function(r) {
                return r ? n ? Object.keys(n).reduce(function(t, e) {
                    return t[e] = n[e](r[e]), t
                }, {}) : r : {}
            }
        },
        y = function() {
            function t() {
                if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
                this.time = c(), this.action = null, this.group = null, this.label = null, this.experiment = null
            }
            var e, r, n;
            return e = t, (r = [{
                key: "update",
                value: function(r) {
                    var n = this;
                    r && Object.keys(this.fields).reduce(function(t, e) {
                        e in r && (n[e] = r[e])
                    }, {})
                }
            }, {
                key: "data",
                value: function() {
                    var r = this;
                    return {
                        action: this.action,
                        time: this.time,
                        group: null !== this.group ? this.group : f("group"),
                        label: null !== this.label ? this.label : f("label"),
                        experiment: null !== this.experiment ? this.experiment : f("experiment"),
                        body: Object.keys(this.fields).reduce(function(t, e) {
                            return t[e] = r.fields[e](r[e]), t
                        }, {})
                    }
                }
            }]) && $(e.prototype, r), n && $(e, n), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t
        }();

    function b(t) {
        return (b = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function G(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== b(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== b(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === b(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function K(t, e) {
        return (K = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function Q(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = d(r),
                e = (t = n ? (t = d(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === b(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function d(t) {
        return (d = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var X = function() {
            var t = i,
                e = y;
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(t, "prototype", {
                writable: !1
            }), e && K(t, e);
            var r, n, o = Q(i);

            function i(t) {
                var e;
                if (this instanceof i) return (e = o.call(this)).action = "init", e.fields = {
                    url: u(),
                    referrer: u(),
                    inIframe: z(),
                    windowWidth: a(),
                    windowHeight: a(),
                    timezoneOffset: a(),
                    params: W({
                        source: u(),
                        placement: u(),
                        from: u()
                    })
                }, e.url = t.url || window.location.toString(), e.referrer = t.referrer || document.referrer, e.inIframe = function() {
                    try {
                        return window.self !== window.top
                    } catch (t) {
                        return !0
                    }
                }(), e.windowWidth = window.innerWidth, e.windowHeight = window.innerHeight, e.timezoneOffset = (new Date).getTimezoneOffset(), e.params = {
                    source: t.source || null,
                    placement: t.placement || null,
                    from: t.from || null
                }, e;
                throw new TypeError("Cannot call a class as a function")
            }
            return t = i, r && G(t.prototype, r), n && G(t, n), Object.defineProperty(t, "prototype", {
                writable: !1
            }), t
        }(),
        Y = ["url", "referrer"];

    function Z() {
        var t = m(v);
        return t || (t = n(), et(v, t, f("lifetime")), t = m(v)), t || "0"
    }

    function tt() {
        var t = "0";
        return window.sessionStorage && !(t = sessionStorage.getItem(v)) && (sessionStorage.setItem(v, n()), t = sessionStorage.getItem(v)), t || "0"
    }
    var et = function(t, e, r) {
            var n, o = "";
            r && ((n = new Date).setTime(n.getTime() + 24 * r * 60 * 60 * 1e3), o = "; expires=".concat(n.toUTCString())), document.cookie = "".concat(t, "=").concat(e).concat(o, "; SameSite=Strict; path=/")
        },
        m = function(t) {
            for (var e = "".concat(t, "="), r = document.cookie.split(";"), n = 0; n < r.length; n += 1) {
                for (var o = r[n];
                    " " === o.charAt(0);) o = o.substring(1, o.length);
                if (0 === o.indexOf(e)) return o.substring(e.length, o.length)
            }
            return null
        },
        v = "__spdt",
        t = {
            user: Z(),
            session: tt(),
            page: n()
        };
    var h = t,
        w = {},
        rt = function(e) {
            if (!e) return !1;
            var r = "spdt-".concat(c(), "-").concat(parseInt(1e3 * Math.random(), 10)),
                e = {
                    order: 0,
                    pid: h.page,
                    sid: h.session,
                    event: e
                };
            try {
                e.order = localStorage.length, localStorage.setItem(r, JSON.stringify(e))
            } catch (t) {
                e.order = Object.keys(w).length, w[r] = e
            }
            return !0
        };
    var nt = [],
        g = function(t) {
            for (var e, r = function() {
                    var t = Object.keys(w).map(function(t) {
                        return w[t]
                    });
                    if (window.localStorage)
                        for (var e = 0; e < localStorage.length; e += 1) {
                            var r = localStorage.key(e);
                            /^spdt-[.\d]+-\d+/.test(r) && t.push(JSON.parse(localStorage.getItem(r)))
                        }
                    var n = t.reduce(function(t, e) {
                        var r = "".concat(e.sid, ".").concat(e.pid);
                        return r in t ? t[r].push(e) : t[r] = [e], t
                    }, {});
                    return Object.keys(n).map(function(t) {
                        return n[t].sort(function(t, e) {
                            return t.order - e.order
                        })
                    }).sort(function(t, e) {
                        return t[0].order - e[0].order
                    }).map(function(t) {
                        return {
                            pid: t[0].pid,
                            sid: t[0].sid,
                            events: t.map(function(t) {
                                return t.event
                            })
                        }
                    })
                }(), n = window.localStorage ? localStorage.length : 0, o = [], i = 0; i <= n; i += 1) {
                var u = localStorage.key(i);
                /^spdt-[.\d]+-\d+/.test(u) && o.push(u)
            }
            return o.forEach(function(t) {
                localStorage.removeItem(t)
            }), w = {}, 0 !== r.length && (e = h.page, r.forEach(function(t) {
                t.pid === e && (nt = nt.concat(t.events))
            }), r = r.map(function(t) {
                return Object.assign(t, {
                    uid: h.user,
                    key: f("key"),
                    time: c()
                })
            }), t.emit("api.capture", r), !0)
        };

    function ot(e) {
        e.addListener("api.capture", function(t) {
            fetch("https://evnt.byspotify.com", {
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                method: "POST",
                body: JSON.stringify(t)
            }).catch(function() {}).then(function() {
                e.emit("api.captured")
            })
        })
    }

    function O(t) {
        return (O = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function it(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== O(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== O(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === O(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function ut(t, e) {
        return (ut = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function ct(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = S(r),
                e = (t = n ? (t = S(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === O(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function S(t) {
        return (S = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var j = function() {
        var t = i,
            e = y;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), e && ut(t, e);
        var r, n, o = ct(i);

        function i(t) {
            var e;
            if (this instanceof i) return (e = o.call(this)).action = "alias", e.fields = {
                id: u(),
                email: u()
            }, e.update(t), e;
            throw new TypeError("Cannot call a class as a function")
        }
        return t = i, r && it(t.prototype, r), n && it(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t
    }();

    function _(t) {
        return (_ = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function ft(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== _(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== _(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === _(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function at(t, e) {
        return (at = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function st(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = P(r),
                e = (t = n ? (t = P(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === _(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function P(t) {
        return (P = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var lt = function() {
        var t = i,
            e = y;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), e && at(t, e);
        var r, n, o = st(i);

        function i(t) {
            var e;
            if (this instanceof i) return (e = o.call(this)).action = "product", e.fields = {
                value: p(),
                currency: u(),
                product_id: u(),
                product_name: u(),
                product_type: u(),
                product_vendor: u()
            }, e.update(t), e;
            throw new TypeError("Cannot call a class as a function")
        }
        return t = i, r && ft(t.prototype, r), n && ft(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t
    }();

    function T(t) {
        return (T = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function pt(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== T(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== T(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === T(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function yt(t, e) {
        return (yt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function bt(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = R(r),
                e = (t = n ? (t = R(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === T(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function R(t) {
        return (R = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var dt = function() {
        var t = i,
            e = y;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), e && yt(t, e);
        var r, n, o = bt(i);

        function i(t) {
            var e;
            if (this instanceof i) return (e = o.call(this)).action = "addtocart", e.fields = {
                value: p(),
                quantity: a(),
                currency: u(),
                product_id: u(),
                product_name: u(),
                product_type: u(),
                product_vendor: u(),
                variant_id: u(),
                variant_name: u()
            }, e.update(t), e;
            throw new TypeError("Cannot call a class as a function")
        }
        return t = i, r && pt(t.prototype, r), n && pt(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t
    }();

    function E(t) {
        return (E = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function mt(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== E(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== E(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === E(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function vt(t, e) {
        return (vt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function ht(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = x(r),
                e = (t = n ? (t = x(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === E(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function x(t) {
        return (x = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var wt = function() {
        var t = i,
            e = y;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), e && vt(t, e);
        var r, n, o = ht(i);

        function i(t) {
            var e;
            if (this instanceof i) return (e = o.call(this)).action = "purchase", e.fields = {
                value: p(),
                quantity: a(),
                currency: u(),
                discount_code: u(),
                order_id: u(),
                is_new_customer: z(),
                line_items: J({
                    value: p(),
                    quantity: a(),
                    product_id: u(),
                    product_name: u(),
                    product_type: u(),
                    product_vendor: u(),
                    variant_id: u(),
                    variant_name: u()
                })
            }, e.update(t), e;
            throw new TypeError("Cannot call a class as a function")
        }
        return t = i, r && mt(t.prototype, r), n && mt(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t
    }();

    function k(t) {
        return (k = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function gt(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== k(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== k(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === k(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function Ot(t, e) {
        return (Ot = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function St(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = C(r),
                e = (t = n ? (t = C(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === k(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function C(t) {
        return (C = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var jt = function() {
        var t = i,
            e = y;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), e && Ot(t, e);
        var r, n, o = St(i);

        function i(t) {
            var e;
            if (this instanceof i) return (e = o.call(this)).action = "checkout", e.fields = {
                value: p(),
                quantity: a(),
                currency: u(),
                discount_code: u(),
                line_items: J({
                    value: p(),
                    quantity: a(),
                    product_id: u(),
                    product_name: u(),
                    product_type: u(),
                    product_vendor: u(),
                    variant_id: u(),
                    variant_name: u()
                })
            }, e.update(t), e;
            throw new TypeError("Cannot call a class as a function")
        }
        return t = i, r && gt(t.prototype, r), n && gt(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t
    }();

    function A(t) {
        return (A = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function _t(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== A(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== A(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === A(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function Pt(t, e) {
        return (Pt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function Tt(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = L(r),
                e = (t = n ? (t = L(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === A(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function L(t) {
        return (L = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var Rt = function() {
        var t = i,
            e = y;
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(t, "prototype", {
            writable: !1
        }), e && Pt(t, e);
        var r, n, o = Tt(i);

        function i(t) {
            var e;
            if (this instanceof i) return (e = o.call(this)).action = "lead", e.fields = {
                type: u(),
                category: u(),
                value: p(),
                currency: u()
            }, e.update(t), e;
            throw new TypeError("Cannot call a class as a function")
        }
        return t = i, r && _t(t.prototype, r), n && _t(t, n), Object.defineProperty(t, "prototype", {
            writable: !1
        }), t
    }();

    function I(t) {
        return (I = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
            return typeof t
        } : function(t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        })(t)
    }

    function Et(t, e) {
        for (var r = 0; r < e.length; r++) {
            var n = e[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, function(t) {
                t = function(t, e) {
                    if ("object" !== I(t) || null === t) return t;
                    var r = t[Symbol.toPrimitive];
                    if (void 0 === r) return ("string" === e ? String : Number)(t);
                    r = r.call(t, e || "default");
                    if ("object" !== I(r)) return r;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }(t, "string");
                return "symbol" === I(t) ? t : String(t)
            }(n.key), n)
        }
    }

    function xt(t, e) {
        return (xt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        })(t, e)
    }

    function kt(r) {
        var n = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
            } catch (t) {
                return !1
            }
        }();
        return function() {
            var t, e = N(r),
                e = (t = n ? (t = N(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), this);
            if (t && ("object" === I(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            if (void 0 !== e) return e;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
    }

    function N(t) {
        return (N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        })(t)
    }
    var Ct = function() {
            var t = i,
                e = y;
            if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e && e.prototype, {
                constructor: {
                    value: t,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(t, "prototype", {
                writable: !1
            }), e && xt(t, e);
            var r, n, o = kt(i);

            function i(t) {
                var e;
                if (this instanceof i) return (e = o.call(this)).action = "click", e.fields = {
                    type: u(),
                    category: u()
                }, e.update(t), e;
                throw new TypeError("Cannot call a class as a function")
            }
            return t = i, r && Et(t.prototype, r), n && Et(t, n), Object.defineProperty(t, "prototype", {
                writable: !1
            }), t
        }(),
        At = "__spdt_opt_out";

    function Lt(n) {
        var t, r, e, o, i, u, c, f, a;
        m(At) || (0 < (t = window.location.search).slice("?" == t.charAt(0) ? 1 : 0).split("&").map(function(t) {
            return t.split("=").map(decodeURIComponent)
        }).filter(function(t) {
            return "spdt_opt_out" == t[0]
        }).length ? et(At, "1", 3650) : ((r = n).addListener("event", function(t, e) {
            rt(t.data()), 1 == e && r.emit("send.events")
        }), (e = n).addListener("debug.events", function(t) {
            e.addListener("event", t)
        }), (o = n).addListener("alias", function(e, r) {
            var t, n;
            e && e.hasOwnProperty("email") && "string" == typeof e.email ? 0 < (t = e.email.trim().toLowerCase()).indexOf("@") ? (n = (new TextEncoder).encode(t), crypto.subtle.digest("SHA-256", n).then(function(t) {
                t = Array.from(new Uint8Array(t));
                e.email = t.map(function(t) {
                    return t.toString(16).padStart(2, "0")
                }).join(""), o.emit("event", new j(e), r)
            })) : (e.email = t, o.emit("event", new j(e), r)) : o.emit("event", new j(e), r)
        }), (i = n).addListener("product", function(t, e) {
            i.emit("event", new lt(t), e)
        }), i.addListener("addtocart", function(t, e) {
            i.emit("event", new dt(t), e)
        }), i.addListener("purchase", function(t, e) {
            i.emit("event", new wt(t), !1 !== e)
        }), i.addListener("checkout", function(t, e) {
            i.emit("event", new jt(t, e))
        }), (u = n).addListener("lead", function(t, e) {
            u.emit("event", new Rt(t), !1 !== e)
        }), (c = n).addListener("click", function(t, e) {
            c.emit("event", new Ct(t), !1 !== e)
        }), (f = n).addListener("view", function(e, t) {
            var r = {};
            e && e.hasOwnProperty && Y.forEach(function(t) {
                e.hasOwnProperty(t) && "string" == typeof e[t] && (r[t] = e[t])
            }), f.emit("event", new X(r), t)
        }), ot(n), (a = n).addListener("configure", function(t) {
            l ? console.hasOwnProperty("warn") && console.warn("spdt already configured.") : (l = !0, s = Object.assign({}, s, t), a.emit("configured", s), a.emit("view"))
        }), a.addListener("conf", function(r) {
            l ? console.hasOwnProperty("warn") && console.warn("spdt already configured.") : (l = !0, r && (s = Object.keys(r).reduce(function(t, e) {
                return s.hasOwnProperty(e) && (t[e] = r[e]), t
            }, Object.assign({}, s))), a.emit("configured", s))
        }), setTimeout(function() {
            var t, e, r;
            e = e || 5e3, g(t = n), r = setInterval(function() {
                g(t)
            }, e), setTimeout(function() {
                clearInterval(r)
            }, 6e6), t.addListener("send.events", function() {
                g(t)
            })
        }, 1)))
    }

    function It(t) {
        return function(t) {
            if (Array.isArray(t)) return Nt(t)
        }(t) || function(t) {
            if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t)
        }(t) || function(t, e) {
            var r;
            if (t) return "string" == typeof t ? Nt(t, e) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(t).slice(8, -1)) && t.constructor ? t.constructor.name : r) || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Nt(t, e) : void 0
        }(t) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function Nt(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
        return n
    }

    function Bt() {
        if (0 < arguments.length) return Ft.emit(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 2 ? void 0 : arguments[2]), new Promise(function(t) {
            Ft.once("api.captured", function() {
                t()
            })
        })
    }
    var Ft = new F.EventEmitter;
    "function" == typeof window.fetch && "function" == typeof Array.from && Lt(Ft);
    window.spdt && window.spdt.q && window.spdt.q.length && window.spdt.q.forEach(function(t) {
        Bt.apply(void 0, It(t))
    }), window.spdt = function() {
        return Bt.apply(void 0, arguments)
    }, window.hasOwnProperty("onSPDTReady") && window.onSPDTReady()
}]);